
<!--<script>-->
<!--      function initialize() {-->
<!--        var mapCanvas = document.getElementById('map');-->
<!--        var mapOptions = {-->
<!--          center: new google.maps.LatLng(44.5403, -78.5463),-->
<!--          zoom: 8,-->
<!--          mapTypeId: google.maps.MapTypeId.ROADMAP-->
<!--        }-->
<!--        var map = new google.maps.Map(mapCanvas, mapOptions)-->
<!--      }-->
<!--      google.maps.event.addDomListener(window, 'load', initialize);-->
<!--    </script>-->

  <div class="main_content">
    <div class="row" id="recipe_top">
      <div class="col-md-4">
        <%= image_tag @recipe.image.url(:medium), class: "recipe_image" %>
      </div>
      <div class="col-md-8">
        <div id="recipe_info">
          <h1>
            <%= @recipe.title %>
          </h1>
          <p class="description">
            <%= @recipe.description %>
          </p>
          <p>
            Submitted by
            <%= @recipe.user.email %>
          </p>
          
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-6">
        <div id="ingredients">
          <h2>Menu</h2>
          <ul>
            <% @recipe.ingredients.each do |ingredient| %>
              <li>
                <%= ingredient.name %>
              </li>
            <% end %>
          </ul>
        </div>
      </div>
      <div class="col-md-6">
        <div id="directions">
          <h2>Directions</h2>
          <ul>
            <% @recipe.directions.each do |direction| %>
              <li>
                <%= direction.step %>
              </li>
            <% end %>
          </ul>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-12">
        <%= link_to "Back", root_path, class: "btn btn-default" %>
        <% if user_signed_in? %>
          <%= link_to "Edit", edit_recipe_path, class: "btn btn-default" %>
          <%= link_to "Delete", recipe_path, method: :delete, data: {confirm: "Are you sure?" }, class: "btn btn-default" %>
        <% end %>
      </div>
    </div>
  </div>
  <div class="ibox-title">
  	<!--<form action="#" onsubmit="showAddress(this.address.value); return false">-->
     
   <!--   <p>-->
   <!--     <input type="text" name="address" value="Cyberjaya, Malaysia" />-->
   <!--     <input type="submit" value="Go!" />-->
   <!--   </p>-->
   <!--   <div id="map" style="height: 400px"></div>-->
   <!-- </form>-->
    

   <!--<input type="text" id="search" class="searchform">-->
   <!--<input type="button" onclick="geocode();" value="Search" class="submitbtn">-->
   
   <br><br>
	<div id="map" style="height: 400px;"></div> 
    <style>
.controls {
  margin-top: 10px;
  border: 1px solid transparent;
  border-radius: 2px 0 0 2px;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  height: 32px;
  outline: none;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
}

#pac-input {
  background-color: #fff;
  font-family: Roboto;
  font-size: 15px;
  font-weight: 300;
  margin-left: 12px;
  padding: 0 11px 0 13px;
  text-overflow: ellipsis;
  width: 300px;
}

#pac-input:focus {
  border-color: #4d90fe;
}

.pac-container {
  font-family: Roboto;
}

#type-selector {
  color: #fff;
  background-color: #4d90fe;
  padding: 5px 11px 0px 11px;
}

#type-selector label {
  font-family: Roboto;
  font-size: 13px;
  font-weight: 300;
}

    </style>
  </head>
  <body>
    <input id="pac-input" class="controls" type="text"
        placeholder="Enter a location">
    <div id="type-selector" class="controls">
      <input type="radio" name="type" id="changetype-all" checked="checked">
      <label for="changetype-all">All</label>

      <input type="radio" name="type" id="changetype-establishment">
      <label for="changetype-establishment">Establishments</label>

      <input type="radio" name="type" id="changetype-address">
      <label for="changetype-address">Addresses</label>

      <input type="radio" name="type" id="changetype-geocode">
      <label for="changetype-geocode">Geocodes</label>
    </div>
    <div id="map"></div>

    <script>
function initMap() {
  var map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: -33.8688, lng: 151.2195},
    zoom: 13
  });
  var input = /** @type {!HTMLInputElement} */(
      document.getElementById('pac-input'));

  var types = document.getElementById('type-selector');
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

  var autocomplete = new google.maps.places.Autocomplete(input);
  autocomplete.bindTo('bounds', map);

  var infowindow = new google.maps.InfoWindow();
  var marker = new google.maps.Marker({
    map: map,
    anchorPoint: new google.maps.Point(0, -29)
  });

  autocomplete.addListener('place_changed', function() {
    infowindow.close();
    marker.setVisible(false);
    var place = autocomplete.getPlace();
    if (!place.geometry) {
      window.alert("Autocomplete's returned place contains no geometry");
      return;
    }

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(17);  // Why 17? Because it looks good.
    }
    marker.setIcon(/** @type {google.maps.Icon} */({
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(35, 35)
    }));
    marker.setPosition(place.geometry.location);
    marker.setVisible(true);

    var address = '';
    if (place.address_components) {
      address = [
        (place.address_components[0] && place.address_components[0].short_name || ''),
        (place.address_components[1] && place.address_components[1].short_name || ''),
        (place.address_components[2] && place.address_components[2].short_name || '')
      ].join(' ');
    }

    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
    infowindow.open(map, marker);
  });

  // Sets a listener on a radio button to change the filter type on Places
  // Autocomplete.
  function setupClickListener(id, types) {
    var radioButton = document.getElementById(id);
    radioButton.addEventListener('click', function() {
      autocomplete.setTypes(types);
    });
  }

  setupClickListener('changetype-all', []);
  setupClickListener('changetype-address', ['address']);
  setupClickListener('changetype-establishment', ['establishment']);
  setupClickListener('changetype-geocode', ['geocode']);
}

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?signed_in=true&libraries=places&callback=initMap"
        async defer></script>
   </script> 
  	</div>
  	
  <h3>Comments</h3>
  <% @comments.each do |comment| %>
    <div class="ibox-title">
      <strong>
        <%= comment.user_name %>
      </strong>
      <br/>
      <p>
        <%= comment.body %>
      </p>
      <!--/ %p= link_to 'Delete', comment_path(comment), method: :delete, data: { confirm: 'Are you sure?' }
      -->
    </div>
  <% end %>
  <%= render 'comments/form' %>

